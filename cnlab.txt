week 2

#include<stdio.h>
#include<string.h>
int main()
{
	char data[100],stuffedData[200];
	int i,count=0,j=0;
	printf("enter the data: ");
	scanf("%s",data);
	for(i=0;i<strlen(data);i++)
	{
		if(data[i]=='1')
		{
			count++;
			stuffedData[j++]=data[i];
			
		} else {
			count=0;
			stuffedData[i++]=data[i];
		}
		if (count==5)
		{
			count=0;
			stuffedData[j++]='0';
			}
		}
		stuffedData[i]='0';
		printf("data after bit suffing;%s\n",stuffedData);
		return 0;
	}
/////////////////////////////////////


week2b
#include<stdio.h>
#include<string.h>
int main()
{
	char a[80],b[80]="";
	int i,j,l;
	printf("\n enter a string: ");
	gets(a);
	strcat(b,"[");
	for(i=0,j=1;a[i]!='\0';i++)
	{
		if(a[i]=='[')
		{
			b[j++]=a[i];
			b[j++]='[';
		}
		else if(a[i]==']')
		{
			b[j++]=a[i];
			b[j++]=']';
		}
		else
		b[j++]=a[i];
	}
	b[j]='\0';
	strcat(b,"]");
	puts("\nstring after byte stuffing");
	puts(b);
	i=strlen(b);
	for(i=0,i=1;i<l-1;i++,j++)
	{
		if(b[j]=='[')
		{
			a[i]=b[j];
			j++;
		}
		else
		a[i]=b[i];
	}
	a[i]='\0';
	puts("\n\n string after desuffling");
	puts(a);
}


//////////////////////////////

week4 star
set ns [new Simulator]
set nf [open cse.nam w]
$ns namtrace-all $nf
set nd [open cse.tr w]
$ns trace-all $nd
set n1 [$ns node]
set n2 [$ns node]
set n3 [$ns node]
set n4 [$ns node]
set n0 [$ns node]
$ns duplex-link $n1 $n2 10Mbps 10ms DropTail
$ns duplex-link $n1 $n3 10Mbps 10ms DropTail
$ns duplex-link $n1 $n4 10Mbps 10ms DropTail
$ns duplex-link $n1 $n0 10Mbps 10ms DropTail
$ns duplex-link-op $n2 $n1 orient right-down
$ns duplex-link-op $n3 $n1 orient right-up
$ns duplex-link-op $n0 $n1 orient left-up
$ns duplex-link-op $n4 $n1 orient left-down
proc finish {} {
global ns nf nd
$ns flush-trace
close $nf
exec nam cse.nam &
exit 0
}
$ns at 5.0 "finish"
$ns run
/////////////////////////////
week4 bus
set ns [new Simulator]
set nf [open cse.nam w]
$ns namtrace-all $nf
set nd [open cse.tr w]
$ns trace-all $nd
set n1 [$ns node]
set n2 [$ns node]
set n3 [$ns node]
set n4 [$ns node]
$ns duplex-link $n1 $n2 10Mbps 10ms DropTail
$ns duplex-link $n2 $n3 10Mbps 10ms DropTail
$ns duplex-link $n3 $n4 10Mbps 10ms DropTail
$ns duplex-link-op $n1 $n2 orient right
$ns duplex-link-op $n2 $n3 orient right
$ns duplex-link-op $n3 $n4 orient right
proc finish { } {
global ns nf nd
$ns flush-trace
close $nf
exec nam cse.nam &
exit 0
}
$ns at 5.0 "finish"
$ns run
///////////////////////////////////

week 5 ring
set ns [new Simulator]
set nf [open cse.nam w]
$ns namtrace-all $nf
set nd [open cse.tr w]
$ns trace-all $nd
set n1 [$ns node]
set n2 [$ns node]
set n3 [$ns node]
set n4 [$ns node]
$ns duplex-link $n1 $n2 10Mbps 10ms DropTail
$ns duplex-link $n2 $n3 10Mbps 10ms DropTail
$ns duplex-link $n3 $n4 10Mbps 10ms DropTail
$ns duplex-link $n4 $n1 10Mbps 10ms DropTail
$ns duplex-link-op $n2 $n1 orient right
$ns duplex-link-op $n3 $n2 orient down
$ns duplex-link-op $n4 $n3 orient left
$ns duplex-link-op $n1 $n4 orient up
proc finish { } {
global ns nf nd
$ns flush-trace
close $nf
exec nam cse.nam &
exit 0
}
$ns at 5.0 "finish"
$ns run

////////////////////////////////////
week5 mesh
set ns [new Simulator]
set nf [open cse.nam w]
$ns namtrace-all $nf
set nd [open cse.tr w]
$ns trace-all $nd
set n1 [$ns node]
set n2 [$ns node]
set n3 [$ns node]
set n4 [$ns node]
$ns duplex-link $n1 $n2 10Mbps 10ms DropTail
$ns duplex-link $n2 $n3 10Mbps 10ms DropTail
$ns duplex-link $n3 $n4 10Mbps 10ms DropTail
$ns duplex-link $n4 $n1 10Mbps 10ms DropTail
$ns duplex-link $n3 $n1 10Mbps 10ms DropTail
$ns duplex-link $n2 $n4 10Mbps 10ms DropTail
$ns duplex-link-op $n2 $n1 orient right
$ns duplex-link-op $n3 $n2 orient down
$ns duplex-link-op $n4 $n3 orient left
$ns duplex-link-op $n1 $n4 orient up
$ns duplex-link-op $n3 $n1 orient right-down
$ns duplex-link-op $n2 $n4 orient right-up
proc finish { } {
global ns nf nd
$ns flush-trace
close $nf
exec nam cse.nam &
exit 0
}

////////////////////////////////

week 6

#6. Implement client-server model using NS2
set ns [new Simulator]
set nf [open cs.nam w]
$ns namtrace-all $nf
set nd [open cs.tr w]
$ns trace-all $nd
set n0 [$ns node]
set n1 [$ns node]
$ns duplex-link $n0 $n1 10Mbps 10ms DropTail
$ns duplex-link-op $n0 $n1 orient right
$n0 shape box
$n1 shape hexagon
$ns at 0.1 "$n0 label client"
$ns at 0.2 "$n1 label server"
$ns at 0.1 "$n0 color blue"
$ns at 0.2 "$n1 color red"
set tcp0 [new Agent/TCP]
$ns attach-agent $n0 $tcp0
set Sink [new Agent/Null]
$ns attach-agent $n1 $Sink
$ns connect $tcp0 $Sink
set cbr0 [new Application/Traffic/CBR]
$cbr0 set packetSize _ 500
$cbr0 set interval _ 0.005
$cbr0 attach-agent $tcp0
$ns at 0.5 "$cbr0 start"
$ns at 2.5 "$cbr0 stop"
proc finish { } {
    global ns nf nd
    $ns flush-trace
    close $nf
    exec nam cs.nam &
    exit 0
}
$ns at 5.0 "finish"
$ns run
/////////////////////////
week 7a


set ns [new Simulator]
set nf [open cs.nam w]
$ns namtrace-all $nf
set nd [open cs.tr w]
$ns trace-all $nd
set n0 [$ns node]
set n1 [$ns node]
set n2 [$ns node]
set n3 [$ns node]
$ns duplex-link $n0 $n1 10Mbps 10ms DropTail
$ns duplex-link-op $n0 $n1 orient right
$ns duplex-link $n1 $n2 10Mbps 10ms DropTail
$ns duplex-link-op $n1 $n2 orient right
$ns duplex-link $n2 $n3 10Mbps 10ms DropTail
$ns duplex-link-op $n2 $n3 orient right
$n0 shape box
$n1 shape hexagon
$ns at 0.1 "$n0 label client"
$ns at 0.2 "$n1 label server"
$ns at 0.1 "$n0 color blue"
$ns at 0.2 "$n1 color red"
set tcp0 [new Agent/TCP]
$ns attach-agent $n0 $tcp0
set Sink [new Agent/Null]
$ns attach-agent $n3 $Sink
$ns connect $tcp0 $Sink
set cbr0 [new Application/Traffic/CBR]
$cbr0 set packetSize _ 500
$cbr0 set interval _ 0.005
$cbr0 attach-agent $tcp0
$ns at 0.5 "$cbr0 start"
$ns at 2.5 "$cbr0 stop"
proc finish { } {
global ns nf nd
$ns flush-trace
close $nf
exec nam cs.nam &
exit 0
}
$ns at 5.0 "finish"
$ns run

///////////////////////////
week 7b
Data transfer among set of nodes: 

set ns [new Simulator] 
set nf [open cse.nam w] 
$ns namtrace-all $nf 
set nd [open cse.tr w] 
$ns trace-all $nd 
set n0 [$ns node] 
set n1 [$ns node] 
set n2 [$ns node] 
set n3 [$ns node] 
$ns duplex-link $n0 $n1 10Mbps 10ms DropTail 
$ns duplex-link-op $n0 $n1 orient right 
$ns duplex-link $n1 $n2 10Mbps 10ms DropTail 
$ns duplex-link-op $n1 $n2 orient right 
$ns duplex-link $n2 $n3 10Mbps 10ms DropTail 
$ns duplex-link-op $n2 $n3 orient right 
set udp0 [new Agent/TCP] 
$ns attach-agent $n0 $udp0 
set Sink [new Agent/Null] 
$ns attach-agent $n3 $Sink 
$ns connect $udp0 $Sink 
set cbr0 [new Application/Traffic/CBR] 
$cbr0 set packetSize _ 1500 
$cbr0 set interval _ 0.005 
$cbr0 attach-agent $udp0 
$ns at 0.1 "$cbr0 start" 
$ns at 0.4 "$cbr0 stop" 
proc finish { } { 
global ns nf nd
$ns flush-trace 
close $nf 
exec nam cse.nam & 
exit 0 
} 
$ns at 5.0 "finish"  
$ns run

///////////////////////////////

week 8a
set ns [new Simulator]
set nf [open cs.nam w]
$ns namtrace-all $nf
set nd [open cs.tr w]
$ns trace-all $nd
set n0 [$ns node]
set n1 [$ns node]
$ns duplex-link $n0 $n1 10Mbps 10ms DropTail
$ns duplex-link-op $n0 $n1 orient right
$n0 shape box
$n1 shape hexagon
$ns at 0.1 "$n0 label client"
$ns at 0.2 "$n1 label server"
$ns at 0.1 "$n0 color blue"
$ns at 0.2 "$n1 color red"
set udp0 [new Agent/UDP]
$ns attach-agent $n0 $udp0
set udp1 [new Agent/Null]
$ns attach-agent $n1 $udp1
$ns connect $udp0 $udp1
set cbr0 [new Application/Traffic/CBR]
$cbr0 set packetSize _ 500
$cbr0 set interval _ 0.005
$cbr0 attach-agent $udp0
$ns at 0.5 "$cbr0 start"
$ns at 2.5 "$cbr0 stop"
proc finish { } {
global ns nf nd
$ns flush-trace
close $nf
exec nam cs.nam &
exit 0
}
$ns at 5.0 "finish"
$ns run

//////////////////////////////

week8b
set ns [new Simulator]
set nf [open cse.nam w]
$ns namtrace-all $nf
set nd [open cse.tr w]
$ns trace-all $nd
set n0 [$ns node]
set n1 [$ns node]
set n2 [$ns node]
set n3 [$ns node]
$ns duplex-link $n0 $n1 10Mbps 10ms DropTail
$ns duplex-link-op $n0 $n1 orient right
$ns duplex-link $n1 $n2 10Mbps 10ms DropTail
$ns duplex-link-op $n1 $n2 orient right
$ns duplex-link $n2 $n3 10Mbps 10ms DropTail
$ns duplex-link-op $n2 $n3 orient right
set udp0 [new Agent/UDP]
$ns attach-agent $n0 $udp0
set Sink [new Agent/Null]
$ns attach-agent $n3 $Sink
$ns connect $udp0 $Sink
set cbr0 [new Application/Traffic/CBR]
$cbr0 set packetSize _ 500
$cbr0 set interval _ 0.005
$cbr0 attach-agent $udp0
$ns at 0.1 "$cbr0 start"
$ns at 0.4 "$cbr0 stop"
proc finish { } {
global ns nf nd
$ns flush-trace
close $nf
exec nam cse.nam &
exit 0
}
$ns at 5.0 "finish" 
$ns run


